name: Deployment
on:
  push:
    branches:
      - master
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Load & cache dependencies  # we use the custom aciton here
        id: cache-deps #need id to reference in the output
        uses: ./.github/actions/cached-deps   # We point the folder with the aciton file, based on root.
      # If we had the action in a repository we can just reference it, for example: yordan-mirchev/my-action
        with:
          caching: 'false' #we add a custom input to stop cahciong for this step. On the other places we use the default 'true'.
      - name: Output information
        run: echo "Cache used? ${{ steps. cache-deps.outputs.used-cache }}" #we use the output
      - name: Lint code
        run: npm run lint
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Load & cache dependencies  # we use the custom aciton here
        uses: ./.github/actions/cached-deps   # We point the folder with the aciton file, based on root.
      # If we had the action in a repository we can just reference it, for example: yordan-mirchev/my-action
      - name: Test code
        id: run-tests
        run: npm run test
      - name: Upload test report
        if: failure() && steps.run-tests.outcome == 'failure'
        uses: actions/upload-artifact@v3
        with:
          name: test-report
          path: test.json
  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Load & cache dependencies  # we use the custom aciton here
        uses: ./.github/actions/cached-deps   # We point the folder with the aciton file, based on root.
      # If we had the action in a repository we can just reference it, for example: yordan-mirchev/my-action
      - name: Build website
        run: npm run build
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist-files
          path: dist
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Get build artifacts
        uses: actions/download-artifact@v3
        with:
          name: dist-files
          path: ./dist
      - name: Output contents
        run: ls
      - name: Deploy site
        run: echo "Deploying..."
  information:
    runs-on: ubuntu-latest
    steps:
      - name: Get code # we need to have this step in order to get the code and the files for the action.
      # As this is a local action, if it was on a repository, this is not needed.
      # If we don't get the code we'll get an error like : 'Error: Can't find 'action.yml', 'action.yaml' or 'Dockerfile' under ...'
        uses: actions/checkout@v3
      - name: Run custom JS action
        uses: ./.github/actions/deploy-s3-javascript #we provide the path to the js action folder

